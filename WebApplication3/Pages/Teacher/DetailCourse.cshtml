@page
@model WebApplication3.Pages.Teacher.DetailCourseModel
@{
    ViewData["Title"] = Model.Course.title;
}

<div class="container-fluid">
    <div class="row">
        <!-- Боковая панель с уроками -->
        <div class="col-md-3 bg-light border-right">
            <h4 class="mt-3">Уроки курса</h4>
            <div class="list-group" id="lessonsList">
                @foreach (var lesson in Model.Course.Lessons)
                {
                    <a href="javascript:void(0)" 
                       class="list-group-item list-group-item-action lesson-item"
                       data-lesson-id="@lesson.Id">
                        @lesson.Title
                        <span class="badge badge-primary badge-pill ml-2">
                            @lesson.Materials.Count
                        </span>
                    </a>
                }
            </div>
            <a asp-page="./TeacherCourses" class="btn btn-secondary mt-3">Назад к курсам</a>
        </div>

        <!-- Основной контент с материалами -->
        <div class="col-md-9" id="materialsContainer">
            <h1 class="mt-3">@Model.Course.title</h1>
            <p class="lead">@Model.Course.desceiption</p>

            @foreach (var lesson in Model.Course.Lessons)
            {
                <div class="lesson-content" id="lesson-@lesson.Id" style="display: none;">
                    <h3 class="mt-4">@lesson.Title</h3>
                    <div class="lesson-meta mb-3">
                        <small class="text-muted">
                            Создан: @lesson.CreatedAt.ToString("dd.MM.yyyy")
                        </small>
                    </div>

                    @if (lesson.Materials.Any())
                    {
                        <div class="materials-list">
                            @foreach (var (material, index) in lesson.Materials.Select((m, i) => (m, i + 1)))
                            {
                                <div class="material-item">
                                    <div class="card mb-4">
                                        <div class="card-header d-flex justify-content-between align-items-center">
                                            <h5 class="mb-0">@material.Title</h5>
                                            <span class="badge badge-secondary">Страница @index</span>
                                        </div>
                                        <div class="card-body">
                                            <div class="material-content" data-full-content="@material.Content">
                                                @Html.Raw(TruncateContent(material.Content, 500))
                                            </div>
                                            @if (material.Content.Length > 500)
                                            {
                                                <button class="btn btn-link btn-sm p-0 mt-2 toggle-content">
                                                    Показать полностью
                                                </button>
                                            }
                                        </div>
                                        <div class="card-footer text-muted">
                                            <small>
                                                Добавлен: @material.CreatedAt.ToString("g")
                                            </small>
                                        </div>
                                    </div>
                                </div>
                            }
                        </div>
                    }
                    else
                    {
                        <div class="alert alert-info">Материалы к уроку отсутствуют</div>
                    }
                </div>
            }
        </div>
    </div>
</div>

<style>
    .lesson-content {
        margin-bottom: 3rem;
    }
    .material-item {
        page-break-inside: avoid;
        margin-bottom: 2rem;
    }
    .material-content {
        max-height: 300px;
        overflow: hidden;
        position: relative;
    }
    .material-content.expanded {
        max-height: none;
        overflow: visible;
    }
    .material-content::after {
        content: '';
        position: absolute;
        bottom: 0;
        left: 0;
        right: 0;
        height: 30px;
        background: linear-gradient(to bottom, 
            rgba(255,255,255,0) 0%, 
            rgba(255,255,255,0.9) 100%);
    }
    .material-content.expanded::after {
        display: none;
    }
</style>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            // Обработка кликов по урокам
            document.querySelectorAll('.lesson-item').forEach(item => {
                item.addEventListener('click', function() {
                    // Скрыть все уроки
                    document.querySelectorAll('.lesson-content').forEach(lesson => {
                        lesson.style.display = 'none';
                    });
                    
                    // Показать выбранный урок
                    const lessonId = this.dataset.lessonId;
                    document.getElementById(`lesson-${lessonId}`).style.display = 'block';
                    
                    // Обновить активный элемент в списке
                    document.querySelectorAll('.lesson-item').forEach(i => {
                        i.classList.remove('active');
                    });
                    this.classList.add('active');
                });
            });

            // Обработка кнопок "Показать полностью"
            document.querySelectorAll('.toggle-content').forEach(button => {
                button.addEventListener('click', function() {
                    const contentDiv = this.previousElementSibling;
                    const fullContent = contentDiv.dataset.fullContent;
                    
                    if (contentDiv.classList.contains('expanded')) {
                        contentDiv.innerHTML = fullContent.substring(0, 500) + '...';
                        this.textContent = 'Показать полностью';
                    } else {
                        contentDiv.innerHTML = fullContent;
                        this.textContent = 'Свернуть';
                    }
                    contentDiv.classList.toggle('expanded');
                });
            });

            // Активировать первый урок по умолчанию
            document.querySelector('.lesson-item')?.click();
        });
    </script>
}

@functions {
    private string TruncateContent(string content, int maxLength)
    {
        if (content.Length <= maxLength) return content;
        return content.Substring(0, maxLength) + "...";
    }
}